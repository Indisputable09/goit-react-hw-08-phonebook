{"version":3,"file":"static/js/869.0ad6be6d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","constants/formConstants.js","components/Icons/AddContactIcon/AddContactIcon.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","redux/modal/modalSelectors.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactEditorModal/ContactEditorModal.jsx","components/Icons/DeleteIcon/DeleteIcon.jsx","components/Icons/EditIcon/EditIcon.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/PhonebookContent/PhonebookContent.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n\n  :focus {\n    border: 1px solid orange;\n  }\n`;\n","import { object, string } from 'yup';\n\nexport const NAME_MATCH =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nexport const nameError =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const nameNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nexport const requiredError = 'This field is required';\nexport const SignupSchema = object().shape({\n  name: string().required(requiredError).matches(NAME_MATCH, nameError),\n  number: string()\n    .required(requiredError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      nameNumber\n    ),\n});\n","const { AddContactIconStyled } = require('../Icons.styled');\n\nconst AddContactIcon = () => {\n  return <AddContactIconStyled size={25} />;\n};\nexport default AddContactIcon;\n","import { Formik, ErrorMessage } from 'formik';\nimport { Notify } from 'notiflix';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport { FormContainer, Input, Label } from './ContactForm.styled';\nimport { AddButton } from 'components/Button/Button.styled';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\nimport { NAME_MATCH, SignupSchema } from 'constants/formConstants';\nimport AddContactIcon from 'components/Icons/AddContactIcon/AddContactIcon';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage name={name} render={message => Notify.failure(message)} />\n  );\n};\n\nconst ContactForm = () => {\n  const [addContact, { isLoading: isPosting }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const name = e.target.name.value;\n      const number = e.target.number.value;\n      const contactsName = contacts.find(contact => contact.name === name);\n      const contactsNumber = contacts.find(\n        contact => contact.number === number\n      );\n      const contact = { name, number };\n\n      if (contactsName) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${name} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      if (contactsNumber) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${number} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      await addContact(contact);\n      toast.success('Contact added successfully!');\n      e.target.reset();\n    } catch (error) {\n      console.log(error);\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n    >\n      <FormContainer onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern={NAME_MATCH}\n          placeholder=\"Name\"\n          required\n        />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Number\"\n          required\n        />\n        <FormError name=\"number\" />\n        <AddButton type=\"submit\">\n          {isPosting ? (\n            <Loader />\n          ) : (\n            <>\n              <AddContactIcon />\n              <p>Add Contact</p>\n            </>\n          )}\n        </AddButton>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(420px, 1fr));\n  grid-template-rows: auto;\n  gap: 20px;\n  margin: 0;\n  padding: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const Line = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n`;\n\nexport const ButtonsBlock = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","export const getShowModal = state => state.modal.showModal;\nexport const getContactName = state => state.modal.name;\nexport const getContactNumber = state => state.modal.number;\nexport const getContactid = state => state.modal.id;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  background-color: #fff;\n  border-radius: 5px;\n  width: 600px;\n  height: 300px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormBlock = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: orange;\n  border: 1px solid orange;\n  border-radius: 10px;\n  :focus {\n    border: 2px solid orange;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NAME_MATCH, SignupSchema } from 'constants/formConstants';\nimport { FormError } from 'components/ContactForm/ContactForm';\nimport { FormBlock, Input, Label } from './ModalForm.styled';\nimport Loader from 'components/Loader';\nimport { EditButton } from 'components/Button/Button.styled';\nimport {\n  getContactName,\n  getContactNumber,\n  getContactid,\n} from 'redux/modal/modalSelectors';\n\nconst ModalForm = ({ onSubmit, isUpdaiting }) => {\n  const name = useSelector(getContactName);\n  const number = useSelector(getContactNumber);\n  const id = useSelector(getContactid);\n\n  const handleSubmit = async ({ name, number }, actions) => {\n    await onSubmit({ name, number, id });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name,\n        number,\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <FormBlock>\n          <Label htmlFor=\"contactName\">Name</Label>\n          <Input\n            id=\"contactName\"\n            type=\"text\"\n            name=\"name\"\n            pattern={NAME_MATCH}\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor=\"phone\">Number</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n            required\n          />\n          <FormError name=\"number\" />\n          <EditButton\n            type=\"submit\"\n            disabled={values.name === name && values.number === number}\n          >\n            {isUpdaiting ? <Loader /> : 'Edit'}\n          </EditButton>\n        </FormBlock>\n      )}\n    </Formik>\n  );\n};\n\nModalForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isUpdaiting: PropTypes.bool,\n};\n\nexport default ModalForm;\n","import PropTypes from 'prop-types';\nimport { CloseButton } from 'components/Button/Button.styled';\nimport Modal from 'components/Modal';\nimport ModalForm from 'components/ModalForm';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsSlice';\nimport { showModalChange } from 'redux/modal/modalSlice';\n\nconst ContactEditorModal = ({ handleShowModal }) => {\n  const [updateContact, { isLoading: isUpdaiting }] =\n    useUpdateContactMutation();\n  const dispatch = useDispatch();\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact(fields);\n      dispatch(showModalChange());\n      toast.success('Contact edited successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n  return (\n    <>\n      <Modal onClose={handleShowModal}>\n        <CloseButton onClick={handleShowModal}>\n          <AiOutlineCloseCircle size={20} />\n        </CloseButton>\n        <ModalForm onSubmit={handleUpdateContact} isUpdaiting={isUpdaiting} />\n      </Modal>\n    </>\n  );\n};\n\nContactEditorModal.propTypes = {\n  handleShowModal: PropTypes.func.isRequired,\n};\n\nexport default ContactEditorModal;\n","import { DeleteIconStyled } from '../Icons.styled';\nimport { useMedia } from 'react-use';\n\nconst DeletIcon = () => {\n  const isLapTop = useMedia('(min-width: 900px)');\n\n  return <DeleteIconStyled size={isLapTop ? 24 : 20} />;\n};\n\nexport default DeletIcon;\n","import { EditIconStyled } from '../Icons.styled';\nimport { useMedia } from 'react-use';\n\nconst EditIcon = () => {\n  const isLapTop = useMedia('(min-width: 900px)');\n\n  return <EditIconStyled size={isLapTop ? 24 : 20} />;\n};\n\nexport default EditIcon;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonsBlock, Line } from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport Loader from 'components/Loader';\nimport { showModalChange } from 'redux/modal/modalSlice';\nimport { getShowModal } from 'redux/modal/modalSelectors';\nimport ContactEditorModal from 'components/ContactEditorModal';\nimport { ListItemBlockButton } from 'components/Button/Button.styled';\nimport DeletIcon from 'components/Icons/DeleteIcon/DeleteIcon';\nimport EditIcon from 'components/Icons/EditIcon/EditIcon';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const showModal = useSelector(getShowModal);\n  const dispatch = useDispatch();\n\n  const handleShowModal = () => {\n    dispatch(showModalChange({ name, number, id }));\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <>\n      <Line>\n        {name}: <span>{number}</span>\n      </Line>\n      <ButtonsBlock>\n        <ListItemBlockButton onClick={handleShowModal}>\n          <EditIcon />\n        </ListItemBlockButton>\n        <ListItemBlockButton onClick={handleDelete} disabled={isDeleting}>\n          {isDeleting ? <Loader /> : <DeletIcon />}\n        </ListItemBlockButton>\n      </ButtonsBlock>\n      {showModal && <ContactEditorModal handleShowModal={handleShowModal} />}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { List, ListItem } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { getFilterValue } from 'redux/filterSlice';\n\nconst ContactList = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useSelector(getFilterValue);\n\n  const createFilter = () => {\n    const normalizedFilterValue = filter.toLocaleLowerCase();\n    if (contacts) {\n      const filteredContacts = contacts.filter(\n        contact =>\n          contact.name.toLocaleLowerCase().includes(normalizedFilterValue) ||\n          contact.number.toString().includes(normalizedFilterValue)\n      );\n      return filteredContacts;\n    }\n  };\n\n  const filteredContacts = createFilter();\n\n  if (filteredContacts) {\n    return (\n      <List>\n        {filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ListItem key={id} name={name}>\n              <ContactListItem name={name} number={number} id={id} />\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  max-width: 220px;\n  height: 60px;\n  border-radius: 10px;\n  border: none;\n  margin: 20px 0;\n  padding: 10px;\n\n  :focus {\n    outline: 1px solid orange;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterChange, getFilterValue } from 'redux/filterSlice';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n\n  const handleChangeFilter = e => {\n    const inputValue = e.target.value;\n    dispatch(filterChange(inputValue));\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      onChange={handleChangeFilter}\n      value={filter}\n      placeholder=\"Search...\"\n    />\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  margin-top: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst ContactsSection = ({ title, children }) => {\n  return (\n    <>\n      <div>\n        <Title>{title}</Title>\n        {children}\n      </div>\n    </>\n  );\n};\n\nContactsSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ContactsSection;\n","import { Title } from 'components/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport ContactsSection from 'components/Section/Section';\n\nconst PhonebookContent = () => {\n  return (\n    <>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </div>\n      <ContactsSection title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </ContactsSection>\n    </>\n  );\n};\n\nexport default PhonebookContent;\n","import { CenteredLoader } from 'components/App.styled';\nimport Loader from 'components/Loader';\nimport PhonebookContent from 'components/PhonebookContent';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const { data: contacts, refetch } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      refetch();\n    }\n  }, [isLoggedIn, refetch]);\n\n  return contacts ? (\n    <PhonebookContent />\n  ) : (\n    <CenteredLoader>\n      <Loader size={50} />\n    </CenteredLoader>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","Form","Label","Input","Field","NAME_MATCH","requiredError","SignupSchema","object","shape","name","string","required","matches","number","AddContactIconStyled","require","size","FormError","render","message","Notify","useAddContactMutation","addContact","isPosting","isLoading","contacts","useGetContactsQuery","data","handleSubmit","e","preventDefault","target","value","contactsName","find","contact","contactsNumber","Swal","title","text","icon","confirmButtonText","toast","reset","console","log","initialValues","validationSchema","onSubmit","htmlFor","id","type","pattern","placeholder","Loader","List","ListItem","Line","ButtonsBlock","getShowModal","state","modal","showModal","getContactName","getContactNumber","getContactid","Overlay","ModalWindow","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","FormBlock","isUpdaiting","useSelector","actions","values","autoComplete","disabled","handleShowModal","useUpdateContactMutation","updateContact","dispatch","useDispatch","handleUpdateContact","fields","showModalChange","isLapTop","useMedia","DeleteIconStyled","EditIconStyled","useDeleteContactMutation","deleteContact","isDeleting","handleDelete","filter","getFilterValue","filteredContacts","normalizedFilterValue","toLocaleLowerCase","includes","toString","createFilter","sort","firstName","secondName","localeCompare","map","onChange","inputValue","filterChange","Title","isLoggedIn","authSelectors","refetch"],"sourceRoot":""}