{"version":3,"file":"static/js/778.ec95652c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/Button/Button.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n\n  :focus {\n    border: 1px solid orange;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  /* width: 200px; */\n  padding: 15px 50px;\n  border-radius: 5px;\n  border: none;\n  background-color: #fff;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.orangered};\n    transform: scale(0.9);\n  }\n`;\n\nexport const CloseButton = styled(ButtonStyled)`\n  position: absolute;\n  top: 2%;\n  right: 2%;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border-radius: 50%; */\n`;\n\nexport const AddButton = styled(ButtonStyled)`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  border-radius: 10px;\n  background-color: #45f5e6;\n  border: none;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const EditButton = styled(ButtonStyled)`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  padding: 20px 70px;\n\n  border-radius: 10px;\n  background-color: #45f5e6;\n  transition: all 250ms linear;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { Notify } from 'notiflix';\n// import PropTypes from 'prop-types';\nimport Loader from 'components/Loader';\nimport { FormContainer, Input, Label } from './ContactForm.styled';\nimport { AddButton } from 'components/Button/Button.styled';\nimport { useContacts } from 'hooks/ContactsContext';\n\nexport const NAME_MATCH =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nexport const nameError =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const nameNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nexport const requiredError = 'This field is required';\nexport const SignupSchema = object().shape({\n  name: string().required(requiredError).matches(NAME_MATCH, nameError),\n  number: string()\n    .required(requiredError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      nameNumber\n    ),\n});\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage name={name} render={message => Notify.failure(message)} />\n  );\n};\n\nconst ContactForm = () => {\n  const { onSubmit, isPosting } = useContacts();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n    >\n      <FormContainer onSubmit={onSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern={NAME_MATCH}\n          placeholder=\"Name\"\n          required\n        />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Number\"\n          required\n        />\n        <FormError name=\"number\" />\n        <AddButton type=\"submit\">\n          {isPosting ? <Loader /> : 'Add contact'}\n        </AddButton>\n      </FormContainer>\n    </Formik>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   isPosting: PropTypes.bool,\n// };\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));\n  grid-template-rows: auto;\n  gap: 20px;\n  margin: 0;\n  padding: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const Line = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n`;\n\nexport const ButtonsBlock = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nconst Button = ({ type = 'button', children, isDeleting, click }) => {\n  return (\n    <ButtonStyled type={type} onClick={click} disabled={isDeleting}>\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  // children: PropTypes.string,\n  isDeleting: PropTypes.bool,\n  click: PropTypes.func,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  background-color: #fff;\n  border-radius: 5px;\n  width: 600px;\n  height: 300px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormBlock = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: orange;\n  border: 1px solid orange;\n  border-radius: 10px;\n  :focus {\n    border: 2px solid orange;\n  }\n`;\n","import { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport {\n  FormError,\n  NAME_MATCH,\n  SignupSchema,\n} from 'components/ContactForm/ContactForm';\nimport { FormBlock, Input, Label } from './ModalForm.styled';\nimport Loader from 'components/Loader';\nimport { EditButton } from 'components/Button/Button.styled';\n\nconst ModalForm = ({ onSubmit, nameValue, numberValue, isUpdaiting, id }) => {\n  console.log('~ id', id);\n  // console.log('~ nameValue', nameValue);\n  const handleSubmit = async (values, actions) => {\n    // console.log('~ values', values);\n    await onSubmit(values);\n\n    // actions.setSubmitting(false);\n    // actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: nameValue,\n        number: numberValue,\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <FormBlock>\n          <Label htmlFor=\"contactName\">Name</Label>\n          <Input\n            id=\"contactName\"\n            type=\"text\"\n            name=\"name\"\n            pattern={NAME_MATCH}\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor=\"phone\">Number</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n            required\n          />\n          <FormError name=\"number\" />\n          <EditButton\n            type=\"submit\"\n            disabled={\n              values.name === nameValue && values.number === numberValue\n            }\n          >\n            {isUpdaiting ? <Loader /> : 'Edit'}\n          </EditButton>\n        </FormBlock>\n      )}\n    </Formik>\n  );\n};\n\nModalForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  nameValue: PropTypes.string.isRequired,\n  numberValue: PropTypes.string.isRequired,\n  isUpdaiting: PropTypes.bool,\n};\n\nexport default ModalForm;\n","// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonsBlock, Line } from './ContactListItem.styled';\nimport {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport Button from 'components/Button';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\nimport ModalForm from 'components/ModalForm';\nimport { CloseButton } from 'components/Button/Button.styled';\nimport { getShowModal, showModalChange } from 'redux/modalSlice';\n\nconst ContactListItem = ({ name, number, id }) => {\n  // console.log('~ number', number);\n  // console.log('~ name', name);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const [updateContact, { isLoading: isUpdaiting }] =\n    useUpdateContactMutation();\n  const showModal = useSelector(getShowModal);\n  const dispatch = useDispatch();\n  // const [showModal, setShowModal] = useState(modalShow);\n\n  const handleShowModal = () => {\n    // setShowModal(!showModal);\n    dispatch(showModalChange());\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Try again.');\n    }\n  };\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact({ id, ...fields });\n      // setShowModal(!showModal);\n      dispatch(showModalChange());\n      toast.success('Contact edited successfully!');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Line>\n        {name}: <span>{number}</span>\n      </Line>\n      <ButtonsBlock>\n        <Button click={() => handleShowModal()}>Edit</Button>\n        <Button click={handleDelete} isDeleting={isDeleting}>\n          {isDeleting ? <Loader /> : 'Delete'}\n        </Button>\n      </ButtonsBlock>\n      {showModal && (\n        <Modal onClose={handleShowModal}>\n          <CloseButton onClick={handleShowModal}>\n            <AiOutlineCloseCircle size={20} />\n          </CloseButton>\n          <ModalForm\n            id={id}\n            nameValue={name}\n            numberValue={number}\n            onSubmit={handleUpdateContact}\n            isUpdaiting={isUpdaiting}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","// import PropTypes from 'prop-types';\nimport { List, ListItem } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem';\nimport { useContacts } from 'hooks/ContactsContext';\n// import { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n// import { useSelector } from 'react-redux';\n// import { getFilterValue } from 'redux/filterSlice';\n\nconst ContactList = () => {\n  // const { data: contacts } = useGetContactsQuery();\n  // const filter = useSelector(getFilterValue);\n  const { filteredContacts } = useContacts();\n\n  // const createFilter = () => {\n  //   const normalizedFilterValue = filter.toLocaleLowerCase();\n  //   if (contacts) {\n  //     const filteredContacts = contacts.filter(\n  //       contact =>\n  //         contact.name.toLocaleLowerCase().includes(normalizedFilterValue) ||\n  //         contact.phone.toString().includes(normalizedFilterValue)\n  //     );\n  //     return filteredContacts;\n  //   }\n  // };\n\n  // const filteredContacts = createFilter();\n  if (filteredContacts) {\n    return (\n      <List>\n        {filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ListItem key={id} name={name}>\n              <ContactListItem name={name} number={number} id={id} />\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n};\n\n// ContactList.propTypes = {\n//   filter: PropTypes.arrayOf(PropTypes.object),\n// };\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 40px;\n  border-radius: 10px;\n  border: none;\n  margin: 20px 0;\n  padding: 10px;\n\n  :focus {\n    outline: 1px solid orange;\n  }\n`;\n","import { useContacts } from 'hooks/ContactsContext';\n// import PropTypes from 'prop-types';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const { handleChangeFilter, filter } = useContacts();\n  return (\n    <Input\n      type=\"text\"\n      onChange={handleChangeFilter}\n      value={filter}\n      placeholder=\"Search...\"\n    />\n  );\n};\n\n// Filter.propTypes = {\n//   handleChangeFilter: PropTypes.func.isRequired,\n//   filter: PropTypes.string.isRequired,\n// };\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  margin-top: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst ContactsSection = ({ title, children }) => {\n    return (\n        <>\n            <div>\n                <Title>{title}</Title>\n                {children}\n            </div>\n        </>\n    )\n}\n\nContactsSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default ContactsSection;","import { Title } from 'components/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport ContactsSection from 'components/Section/Section';\n\nconst Contacts = () => {\n  return (\n    <>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </div>\n      <ContactsSection title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </ContactsSection>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","Form","Label","Input","Field","ButtonStyled","p","theme","colors","orangered","CloseButton","AddButton","EditButton","NAME_MATCH","requiredError","SignupSchema","object","shape","name","string","required","matches","number","FormError","render","message","Notify","useContacts","onSubmit","isPosting","initialValues","validationSchema","htmlFor","id","type","pattern","placeholder","Loader","List","ListItem","Line","ButtonsBlock","children","isDeleting","click","onClick","disabled","Overlay","ModalWindow","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","currentTarget","target","FormBlock","nameValue","numberValue","isUpdaiting","console","log","handleSubmit","values","actions","autoComplete","useDeleteContactMutation","deleteContact","isLoading","useUpdateContactMutation","updateContact","showModal","useSelector","getShowModal","dispatch","useDispatch","handleShowModal","showModalChange","handleDelete","toast","handleUpdateContact","fields","size","filteredContacts","sort","firstName","secondName","localeCompare","map","handleChangeFilter","filter","onChange","value","Title","title"],"sourceRoot":""}