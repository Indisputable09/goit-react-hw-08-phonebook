{"version":3,"file":"static/js/730.83e96750.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","constants/formConstants.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/Button/Button.jsx","redux/modal/modalSelectors.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactEditorModal/ContactEditorModal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n\n  :focus {\n    border: 1px solid orange;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  /* width: 200px; */\n  padding: 15px 50px;\n  border-radius: 5px;\n  border: none;\n  background-color: #fff;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.orangered};\n    transform: scale(0.9);\n  }\n`;\n\nexport const CloseButton = styled(ButtonStyled)`\n  position: absolute;\n  top: 2%;\n  right: 2%;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border-radius: 50%; */\n`;\n\nexport const AddButton = styled(ButtonStyled)`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  border-radius: 10px;\n  background-color: #45f5e6;\n  border: none;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const EditButton = styled(ButtonStyled)`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  padding: 20px 70px;\n\n  border-radius: 10px;\n  background-color: #45f5e6;\n  transition: all 250ms linear;\n`;\n","import { object, string } from 'yup';\n\nexport const NAME_MATCH =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nexport const nameError =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const nameNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nexport const requiredError = 'This field is required';\nexport const SignupSchema = object().shape({\n  name: string().required(requiredError).matches(NAME_MATCH, nameError),\n  number: string()\n    .required(requiredError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      nameNumber\n    ),\n});\n","import { Formik, ErrorMessage } from 'formik';\nimport { Notify } from 'notiflix';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport { FormContainer, Input, Label } from './ContactForm.styled';\nimport { AddButton } from 'components/Button/Button.styled';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\nimport { NAME_MATCH, SignupSchema } from 'constants/formConstants';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage name={name} render={message => Notify.failure(message)} />\n  );\n};\n\nconst ContactForm = () => {\n  const [addContact, { isLoading: isPosting }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const name = e.target.name.value;\n      const number = e.target.number.value;\n      const contactsName = contacts.find(contact => contact.name === name);\n      const contactsNumber = contacts.find(\n        contact => contact.number === number\n      );\n      const contact = { name, number };\n\n      if (contactsName) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${name} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      if (contactsNumber) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${number} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      await addContact(contact);\n      toast.success('Contact added successfully!');\n      e.target.reset();\n    } catch (error) {\n      console.log(error);\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n    >\n      <FormContainer onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern={NAME_MATCH}\n          placeholder=\"Name\"\n          required\n        />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Number\"\n          required\n        />\n        <FormError name=\"number\" />\n        <AddButton type=\"submit\">\n          {isPosting ? <Loader /> : 'Add contact'}\n        </AddButton>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));\n  grid-template-rows: auto;\n  gap: 20px;\n  margin: 0;\n  padding: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const Line = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n`;\n\nexport const ButtonsBlock = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nconst Button = ({ type = 'button', disabled = false, children, ...props }) => {\n  return (\n    <ButtonStyled type={type} disabled={disabled} {...props}>\n      {children}\n    </ButtonStyled>\n  );\n};\n// const Button = ({ type = 'button', children, isDeleting, click }) => {\n//   return (\n//     <ButtonStyled type={type} onClick={click} disabled={isDeleting}>\n//       {children}\n//     </ButtonStyled>\n//   );\n// };\n\nButton.propTypes = {\n  type: PropTypes.string,\n  // children: PropTypes.string,\n  isDeleting: PropTypes.bool,\n  click: PropTypes.func,\n};\n\nexport default Button;\n","export const getShowModal = state => state.modal.showModal;\nexport const getContactName = state => state.modal.name;\nexport const getContactNumber = state => state.modal.number;\nexport const getContactid = state => state.modal.id;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  background-color: #fff;\n  border-radius: 5px;\n  width: 600px;\n  height: 300px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormBlock = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: orange;\n  border: 1px solid orange;\n  border-radius: 10px;\n  :focus {\n    border: 2px solid orange;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NAME_MATCH, SignupSchema } from 'constants/formConstants';\nimport { FormError } from 'components/ContactForm/ContactForm';\nimport { FormBlock, Input, Label } from './ModalForm.styled';\nimport Loader from 'components/Loader';\nimport { EditButton } from 'components/Button/Button.styled';\nimport {\n  getContactName,\n  getContactNumber,\n  getContactid,\n} from 'redux/modal/modalSelectors';\n\nconst ModalForm = ({ onSubmit, isUpdaiting }) => {\n  const name = useSelector(getContactName);\n  const number = useSelector(getContactNumber);\n  const id = useSelector(getContactid);\n\n  const handleSubmit = async ({ name, number }, actions) => {\n    await onSubmit({ name, number, id });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name,\n        number,\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <FormBlock>\n          <Label htmlFor=\"contactName\">Name</Label>\n          <Input\n            id=\"contactName\"\n            type=\"text\"\n            name=\"name\"\n            pattern={NAME_MATCH}\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor=\"phone\">Number</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n            required\n          />\n          <FormError name=\"number\" />\n          <EditButton\n            type=\"submit\"\n            disabled={values.name === name && values.number === number}\n          >\n            {isUpdaiting ? <Loader /> : 'Edit'}\n          </EditButton>\n        </FormBlock>\n      )}\n    </Formik>\n  );\n};\n\nModalForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isUpdaiting: PropTypes.bool,\n};\n\nexport default ModalForm;\n","import PropTypes from 'prop-types';\nimport { CloseButton } from 'components/Button/Button.styled';\nimport Modal from 'components/Modal';\nimport ModalForm from 'components/ModalForm';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsSlice';\nimport { showModalChange } from 'redux/modal/modalSlice';\n\nconst ContactEditorModal = ({ handleShowModal }) => {\n  const [updateContact, { isLoading: isUpdaiting }] =\n    useUpdateContactMutation();\n  const dispatch = useDispatch();\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact(fields);\n      dispatch(showModalChange());\n      toast.success('Contact edited successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n  return (\n    <>\n      <Modal onClose={handleShowModal}>\n        <CloseButton onClick={handleShowModal}>\n          <AiOutlineCloseCircle size={20} />\n        </CloseButton>\n        <ModalForm onSubmit={handleUpdateContact} isUpdaiting={isUpdaiting} />\n      </Modal>\n      ;\n    </>\n  );\n};\n\nContactEditorModal.propTypes = {\n  handleShowModal: PropTypes.func.isRequired,\n};\n\nexport default ContactEditorModal;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonsBlock, Line } from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport Button from 'components/Button';\nimport Loader from 'components/Loader';\nimport { showModalChange } from 'redux/modal/modalSlice';\nimport { getShowModal } from 'redux/modal/modalSelectors';\nimport ContactEditorModal from 'components/ContactEditorModal';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const showModal = useSelector(getShowModal);\n  const dispatch = useDispatch();\n\n  const handleShowModal = () => {\n    dispatch(showModalChange({ name, number, id }));\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Please, try again.');\n    }\n  };\n\n  return (\n    <>\n      <Line>\n        {name}: <span>{number}</span>\n      </Line>\n      <ButtonsBlock>\n        <Button onClick={handleShowModal}>Edit</Button>\n        <Button onClick={handleDelete} disabled={isDeleting}>\n          {isDeleting ? <Loader /> : 'Delete'}\n        </Button>\n      </ButtonsBlock>\n      {showModal && <ContactEditorModal handleShowModal={handleShowModal} />}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { List, ListItem } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { getFilterValue } from 'redux/filterSlice';\n\nconst ContactList = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useSelector(getFilterValue);\n\n  const createFilter = () => {\n    const normalizedFilterValue = filter.toLocaleLowerCase();\n    if (contacts) {\n      const filteredContacts = contacts.filter(\n        contact =>\n          contact.name.toLocaleLowerCase().includes(normalizedFilterValue) ||\n          contact.number.toString().includes(normalizedFilterValue)\n      );\n      return filteredContacts;\n    }\n  };\n\n  const filteredContacts = createFilter();\n\n  if (filteredContacts) {\n    return (\n      <List>\n        {filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ListItem key={id} name={name}>\n              <ContactListItem name={name} number={number} id={id} />\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 40px;\n  border-radius: 10px;\n  border: none;\n  margin: 20px 0;\n  padding: 10px;\n\n  :focus {\n    outline: 1px solid orange;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterChange, getFilterValue } from 'redux/filterSlice';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n\n  const handleChangeFilter = e => {\n    const inputValue = e.target.value;\n    dispatch(filterChange(inputValue));\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      onChange={handleChangeFilter}\n      value={filter}\n      placeholder=\"Search...\"\n    />\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  margin-top: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst ContactsSection = ({ title, children }) => {\n  return (\n    <>\n      <div>\n        <Title>{title}</Title>\n        {children}\n      </div>\n    </>\n  );\n};\n\nContactsSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ContactsSection;\n","import { CenteredLoader, Title } from 'components/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport ContactsSection from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n// import { getShowModal } from 'redux/modalSlice';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const { data: contacts, refetch } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      refetch();\n    }\n  }, [isLoggedIn, refetch]);\n\n  return contacts ? (\n    <>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </div>\n      <ContactsSection title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </ContactsSection>\n    </>\n  ) : (\n    <CenteredLoader>\n      <Loader size={50} />\n    </CenteredLoader>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","Form","Label","Input","Field","ButtonStyled","p","theme","colors","orangered","CloseButton","AddButton","EditButton","NAME_MATCH","requiredError","SignupSchema","object","shape","name","string","required","matches","number","FormError","render","message","Notify","useAddContactMutation","addContact","isPosting","isLoading","contacts","useGetContactsQuery","data","handleSubmit","e","preventDefault","target","value","contactsName","find","contact","contactsNumber","Swal","title","text","icon","confirmButtonText","toast","reset","console","log","initialValues","validationSchema","onSubmit","htmlFor","id","type","pattern","placeholder","Loader","List","ListItem","Line","ButtonsBlock","disabled","children","props","getShowModal","state","modal","showModal","getContactName","getContactNumber","getContactid","Overlay","ModalWindow","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","FormBlock","isUpdaiting","useSelector","actions","values","autoComplete","handleShowModal","useUpdateContactMutation","updateContact","dispatch","useDispatch","handleUpdateContact","fields","showModalChange","size","useDeleteContactMutation","deleteContact","isDeleting","handleDelete","filter","getFilterValue","filteredContacts","normalizedFilterValue","toLocaleLowerCase","includes","toString","createFilter","sort","firstName","secondName","localeCompare","map","onChange","inputValue","filterChange","Title","isLoggedIn","authSelectors","refetch"],"sourceRoot":""}