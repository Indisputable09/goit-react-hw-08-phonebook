{"version":3,"file":"static/js/778.350852f0.chunk.js","mappings":"+TAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mIAQbE,EAAQF,EAAAA,GAAAA,MAAH,yFAMLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wLCfLK,EAAeL,EAAAA,GAAAA,OAAH,gQAUD,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IAKZC,GAAcV,EAAAA,EAAAA,IAAOK,EAAPL,CAAH,4NAaXW,GAAYX,EAAAA,EAAAA,IAAOK,EAAPL,CAAH,mRAiBTY,GAAaZ,EAAAA,EAAAA,IAAOK,EAAPL,CAAH,iO,gDCjCVa,EACX,yHAMWC,EAAgB,yBAChBC,GAAeC,EAAAA,EAAAA,MAASC,MAAM,CACzCC,MAAMC,EAAAA,EAAAA,MAASC,SAASN,GAAeO,QAAQR,EAL/C,0IAMAS,QAAQH,EAAAA,EAAAA,MACLC,SAASN,GACTO,QACC,6EAPJ,kGAYWE,EAAY,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAC1B,OACE,SAAC,KAAD,CAAcA,KAAMA,EAAMM,OAAQ,SAAAC,GAAO,OAAIC,EAAAA,OAAAA,QAAeD,EAAnB,GAE5C,EAuFD,EArFoB,WAClB,OACEE,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAA2BC,EAA3B,EAAqBC,KAA8BC,EAAnD,EAAwCC,UAE1BC,GAAaC,EAAAA,EAAAA,MAAnBJ,KACFK,EAAY,yCAAG,WAAMC,GAAN,gGAEjBA,EAAEC,iBACInB,EAAOkB,EAAEE,OAAOpB,KAAKqB,MACrBjB,EAASc,EAAEE,OAAOhB,OAAOiB,MACzBC,EAAgBP,EAASQ,MAAK,SAAAC,GAAO,OAAIA,EAAQxB,OAASA,CAArB,IACrCyB,EAAkBV,EAASQ,MAC/B,SAAAC,GAAO,OAAIA,EAAQpB,SAAWA,CAAvB,IAEHoB,EAAU,CAAExB,KAAAA,EAAMI,OAAAA,IAEpBkB,EAXa,wBAYfI,IAAAA,KAAU,CACRC,MAAO,SACPC,KAAK,UAAD,OAAY5B,EAAZ,gCACJ6B,KAAM,QACNC,kBAAmB,WAhBN,+BAoBbL,EApBa,wBAqBfC,IAAAA,KAAU,CACRC,MAAO,SACPC,KAAK,UAAD,OAAYxB,EAAZ,gCACJyB,KAAM,QACNC,kBAAmB,WAzBN,4CA6BXpB,EAAWc,GA7BA,QA8BjBO,QAAQC,IAAI,SAAUrB,GACtBsB,EAAAA,GAAAA,QAAc,+BACdf,EAAEE,OAAOc,QAhCQ,kDAkCjBH,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,oCAnCK,0DAAH,sDAuClB,OACE,SAAC,KAAD,CACEE,cAAe,CACbnC,KAAM,GACNI,OAAQ,IAEVgC,iBAAkBvC,EALpB,UAOE,UAAChB,EAAD,CAAewD,SAAUpB,EAAzB,WACE,SAACjC,EAAD,CAAOsD,QAAQ,OAAf,mBACA,SAACrD,EAAD,CACEsD,GAAG,OACHC,KAAK,OACLxC,KAAK,OACLyC,QAAS9C,EACT+C,YAAY,OACZxC,UAAQ,KAEV,SAACG,EAAD,CAAWL,KAAK,UAChB,SAAChB,EAAD,CAAOsD,QAAQ,SAAf,qBACA,SAACrD,EAAD,CACEsD,GAAG,SACHC,KAAK,MACLxC,KAAK,SACLyC,QAAQ,yFACRC,YAAY,SACZxC,UAAQ,KAEV,SAACG,EAAD,CAAWL,KAAK,YAChB,SAACP,EAAD,CAAW+C,KAAK,SAAhB,SACG3B,GAAY,SAAC8B,EAAA,EAAD,IAAa,oBAKnC,EClHYC,EAAO9D,EAAAA,GAAAA,GAAH,qLASJ+D,EAAW/D,EAAAA,GAAAA,GAAH,2F,oBCTRgE,EAAOhE,EAAAA,GAAAA,EAAH,8GAOJiE,EAAejE,EAAAA,GAAAA,IAAH,wDCSzB,GAfe,SAAC,GAAsD,IAAD,IAAnD0D,KAAAA,OAAmD,MAA5C,SAA4C,EAAlCQ,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACvD,OACE,SAAC/D,EAAD,CAAcqD,KAAMA,EAAMW,QAASD,EAAOE,SAAUH,EAApD,SACGD,GAGN,E,sBCPYK,GAAUvE,EAAAA,GAAAA,IAAH,uOAaPwE,GAAcxE,EAAAA,GAAAA,IAAH,oICVlByE,GAAYC,SAASC,cAAc,eAqCzC,GAnCc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASV,EAAe,EAAfA,UACxBW,EAAAA,GAAAA,YAAU,WACR,IAAMC,EAAgB,SAAA1C,GACL,WAAXA,EAAE2C,MACJH,GAEH,EAID,OAHAI,OAAOC,iBAAiB,UAAWH,GACnCJ,SAASQ,KAAKC,MAAMC,SAAW,SAExB,WACLJ,OAAOK,oBAAoB,UAAWP,GACtCJ,SAASQ,KAAKC,MAAMC,SAAW,OAChC,CACF,GAAE,CAACR,IAQJ,OAAOU,EAAAA,GAAAA,eACL,SAACf,GAAD,CAASF,QAPiB,SAAAjC,GACtBA,EAAEmD,gBAAkBnD,EAAEE,QACxBsC,GAEH,EAGC,UACE,SAACJ,GAAD,UAAcN,MAEhBO,GAEH,EChCYe,IAAYxF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mIAQTE,GAAQF,EAAAA,GAAAA,MAAH,yFAMLG,IAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,oMC2DlB,GAhEkB,SAAC,GAA+B,IAA7BuD,EAA4B,EAA5BA,SAAUkC,EAAkB,EAAlBA,YACvBvE,GAAOwE,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM1E,IAAhB,IACxBI,GAASoE,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMtE,MAAhB,IAC1BmC,GAAKiC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMnC,EAAhB,IAEtBtB,EAAY,yCAAG,WAAO0D,EAAQC,GAAf,sFACbvC,EAAS,CAAErC,KAAM2E,EAAO3E,KAAMI,OAAQuE,EAAOvE,OAAQmC,GAAAA,IADxC,2CAAH,wDAOlB,OACE,SAAC,KAAD,CACEJ,cAAe,CACbnC,KAAAA,EACAI,OAAAA,GAEFgC,iBAAkBvC,EAClBwC,SAAUpB,EANZ,SAQG,gBAAG0D,EAAH,EAAGA,OAAH,OACC,UAACL,GAAD,YACE,SAAC,GAAD,CAAOhC,QAAQ,cAAf,mBACA,SAAC,GAAD,CACEC,GAAG,cACHC,KAAK,OACLxC,KAAK,OACLyC,QAAS9C,EACTkF,aAAa,MACbnC,YAAY,OACZxC,UAAQ,KAEV,SAACG,EAAD,CAAWL,KAAK,UAChB,SAAC,GAAD,CAAOsC,QAAQ,QAAf,qBACA,SAAC,GAAD,CACEC,GAAG,QACHC,KAAK,MACLxC,KAAK,SACLyC,QAAQ,yFACRC,YAAY,SACZmC,aAAa,MACb3E,UAAQ,KAEV,SAACG,EAAD,CAAWL,KAAK,YAChB,SAACN,EAAD,CACE8C,KAAK,SACLY,SAAUuB,EAAO3E,OAASA,GAAQ2E,EAAOvE,SAAWA,EAFtD,SAIGmE,GAAc,SAAC5B,EAAA,EAAD,IAAa,WA5BjC,GAkCN,E,WCUD,GA5DwB,SAAC,GAA0B,IAAxB3C,EAAuB,EAAvBA,KAAMI,EAAiB,EAAjBA,OAAQmC,EAAS,EAATA,GACvC,GAAmDuC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmC9B,EAAnC,KAAwBnC,UACxB,GACEkE,EAAAA,EAAAA,MADF,eAAOC,EAAP,KAAmCV,EAAnC,KAAwBzD,UAElBoE,GAAYV,EAAAA,EAAAA,IAAYW,GAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAkB,WACtBF,GAASG,EAAAA,GAAAA,IAAgB,CAAEvF,KAAAA,EAAMI,OAAAA,EAAQmC,GAAAA,IAC1C,EAEKiD,EAAY,yCAAG,4GAEXT,EAAcxC,GAFH,OAGjBN,EAAAA,GAAAA,QAAc,iCAHG,+CAKjBA,EAAAA,GAAAA,MAAY,oCALK,wDAAH,qDASZwD,EAAmB,yCAAG,WAAMC,GAAN,sFAExB3D,QAAQC,IAAI,WAAY0D,GAFA,SAGlBT,EAAcS,GAHI,OAIxBN,GAASG,EAAAA,GAAAA,OACTtD,EAAAA,GAAAA,QAAc,gCALU,gDAOxBF,QAAQC,IAAR,MAPwB,yDAAH,sDAWzB,OACE,iCACE,UAACc,EAAD,WACG9C,EADH,MACU,0BAAOI,QAEjB,UAAC2C,EAAD,YACE,SAAC,GAAD,CAAQG,MAAO,kBAAMoC,GAAN,EAAf,mBACA,SAAC,GAAD,CAAQpC,MAAOsC,EAAcvC,WAAYA,EAAzC,SACGA,GAAa,SAACN,EAAA,EAAD,IAAa,cAG9BuC,IACC,UAAC,GAAD,CAAOxB,QAAS4B,EAAhB,WACE,SAAC9F,EAAD,CAAa2D,QAASmC,EAAtB,UACE,SAAC,MAAD,CAAsBK,KAAM,QAE9B,SAAC,GAAD,CAAWtD,SAAUoD,EAAqBlB,YAAaA,SAKhE,E,WCxBD,GAtCoB,WAClB,IAAcxD,GAAaC,EAAAA,EAAAA,MAAnBJ,KACFgF,GAASpB,EAAAA,EAAAA,IAAYqB,GAAAA,IAarBC,EAZe,WACnB,IAAMC,EAAwBH,EAAOI,oBACrC,GAAIjF,EAMF,OALyBA,EAAS6E,QAChC,SAAApE,GAAO,OACLA,EAAQxB,KAAKgG,oBAAoBC,SAASF,IAC1CvE,EAAQpB,OAAO8F,WAAWD,SAASF,EAF9B,GAMZ,CAEwBI,GAEzB,GAAIL,EACF,OACE,SAAClD,EAAD,UACGkD,EACEM,MAAK,SAACC,EAAWC,GAAZ,OACJD,EAAUrG,KAAKuG,cAAcD,EAAWtG,KADpC,IAGLwG,KAAI,gBAAGjE,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,KAAMI,EAAb,EAAaA,OAAb,OACH,SAACyC,EAAD,CAAmB7C,KAAMA,EAAzB,UACE,SAAC,GAAD,CAAiBA,KAAMA,EAAMI,OAAQA,EAAQmC,GAAIA,KADpCA,EADZ,KAQd,ECrCYtD,GAAQH,EAAAA,GAAAA,MAAH,2LC0BlB,GAvBe,WACb,IAAMsG,GAAWC,EAAAA,EAAAA,MACXO,GAASpB,EAAAA,EAAAA,IAAYqB,GAAAA,IAM3B,OACE,SAAC,GAAD,CACErD,KAAK,OACLiE,SARuB,SAAAvF,GACzB,IAAMwF,EAAaxF,EAAEE,OAAOC,MAC5B+D,GAASuB,EAAAA,GAAAA,IAAaD,GAEvB,EAKGrF,MAAOuE,EACPlD,YAAY,aAGjB,ECnBYkE,GAAQ9H,EAAAA,GAAAA,GAAH,iECiBlB,GAhBwB,SAAC,GAAyB,IAAvB6C,EAAsB,EAAtBA,MAAOqB,EAAe,EAAfA,SAC9B,OACI,+BACI,4BACI,SAAC4D,GAAD,UAAQjF,IACPqB,MAIhB,E,WC4BD,GA5BiB,WACf,IAAM6D,GAAarC,EAAAA,EAAAA,IAAYsC,GAAAA,GAAAA,eAC/B,GAAoC9F,EAAAA,EAAAA,MAAtBD,EAAd,EAAQH,KAAgBmG,EAAxB,EAAwBA,QAQxB,OANApD,EAAAA,GAAAA,YAAU,WACJkD,GACFE,GAEH,GAAE,CAACF,EAAYE,IAEThG,GACL,iCACE,4BACE,SAAC,KAAD,yBACA,SAAC,EAAD,QAEF,UAAC,GAAD,CAAiBY,MAAM,WAAvB,WACE,SAAC,GAAD,KACA,SAAC,GAAD,WAIJ,SAAC,KAAD,WACE,SAACgB,EAAA,EAAD,CAAQgD,KAAM,MAGnB,C","sources":["components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/Button/Button.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 25px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  border-radius: 10px;\n\n  :focus {\n    border: 1px solid orange;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  /* width: 200px; */\n  padding: 15px 50px;\n  border-radius: 5px;\n  border: none;\n  background-color: #fff;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.orangered};\n    transform: scale(0.9);\n  }\n`;\n\nexport const CloseButton = styled(ButtonStyled)`\n  position: absolute;\n  top: 2%;\n  right: 2%;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border-radius: 50%; */\n`;\n\nexport const AddButton = styled(ButtonStyled)`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  border-radius: 10px;\n  background-color: #45f5e6;\n  border: none;\n  transition: all 250ms linear;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const EditButton = styled(ButtonStyled)`\n  font-weight: 700;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n\n  padding: 20px 70px;\n\n  border-radius: 10px;\n  background-color: #45f5e6;\n  transition: all 250ms linear;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { Notify } from 'notiflix';\n// import PropTypes from 'prop-types';\nimport Loader from 'components/Loader';\nimport { FormContainer, Input, Label } from './ContactForm.styled';\nimport { AddButton } from 'components/Button/Button.styled';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\n\nexport const NAME_MATCH =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nexport const nameError =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const nameNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nexport const requiredError = 'This field is required';\nexport const SignupSchema = object().shape({\n  name: string().required(requiredError).matches(NAME_MATCH, nameError),\n  number: string()\n    .required(requiredError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      nameNumber\n    ),\n});\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage name={name} render={message => Notify.failure(message)} />\n  );\n};\n\nconst ContactForm = () => {\n  const [addContact, { data: contactData, isLoading: isPosting }] =\n    useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const name = e.target.name.value;\n      const number = e.target.number.value;\n      const contactsNames = contacts.find(contact => contact.name === name);\n      const contactsNumbers = contacts.find(\n        contact => contact.number === number\n      );\n      const contact = { name, number };\n\n      if (contactsNames) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${name} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      if (contactsNumbers) {\n        Swal.fire({\n          title: 'Error!',\n          text: `Sorry, ${number} is already in your contacts`,\n          icon: 'error',\n          confirmButtonText: 'Got it',\n        });\n        return;\n      }\n      await addContact(contact);\n      console.log('~ data', contactData);\n      toast.success('Contact added successfully!');\n      e.target.reset();\n    } catch (error) {\n      console.log(error);\n      toast.error('Something went wrong. Try again.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n    >\n      <FormContainer onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern={NAME_MATCH}\n          placeholder=\"Name\"\n          required\n        />\n        <FormError name=\"name\" />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Number\"\n          required\n        />\n        <FormError name=\"number\" />\n        <AddButton type=\"submit\">\n          {isPosting ? <Loader /> : 'Add contact'}\n        </AddButton>\n      </FormContainer>\n    </Formik>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   isPosting: PropTypes.bool,\n// };\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));\n  grid-template-rows: auto;\n  gap: 20px;\n  margin: 0;\n  padding: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const Line = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n`;\n\nexport const ButtonsBlock = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nconst Button = ({ type = 'button', children, isDeleting, click }) => {\n  return (\n    <ButtonStyled type={type} onClick={click} disabled={isDeleting}>\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  // children: PropTypes.string,\n  isDeleting: PropTypes.bool,\n  click: PropTypes.func,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  background-color: #fff;\n  border-radius: 5px;\n  width: 600px;\n  height: 300px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackDropClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormBlock = styled(Form)`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 35px;\n  padding: 10px;\n  outline: orange;\n  border: 1px solid orange;\n  border-radius: 10px;\n  :focus {\n    border: 2px solid orange;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  FormError,\n  NAME_MATCH,\n  SignupSchema,\n} from 'components/ContactForm/ContactForm';\nimport { FormBlock, Input, Label } from './ModalForm.styled';\nimport Loader from 'components/Loader';\nimport { EditButton } from 'components/Button/Button.styled';\n\nconst ModalForm = ({ onSubmit, isUpdaiting }) => {\n  const name = useSelector(state => state.modal.name);\n  const number = useSelector(state => state.modal.number);\n  const id = useSelector(state => state.modal.id);\n\n  const handleSubmit = async (values, actions) => {\n    await onSubmit({ name: values.name, number: values.number, id });\n\n    // actions.setSubmitting(false);\n    // actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name,\n        number,\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <FormBlock>\n          <Label htmlFor=\"contactName\">Name</Label>\n          <Input\n            id=\"contactName\"\n            type=\"text\"\n            name=\"name\"\n            pattern={NAME_MATCH}\n            autoComplete=\"off\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor=\"phone\">Number</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n            autoComplete=\"off\"\n            required\n          />\n          <FormError name=\"number\" />\n          <EditButton\n            type=\"submit\"\n            disabled={values.name === name && values.number === number}\n          >\n            {isUpdaiting ? <Loader /> : 'Edit'}\n          </EditButton>\n        </FormBlock>\n      )}\n    </Formik>\n  );\n};\n\nModalForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  // nameValue: PropTypes.string.isRequired,\n  // numberValue: PropTypes.string.isRequired,\n  isUpdaiting: PropTypes.bool,\n};\n\nexport default ModalForm;\n","// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonsBlock, Line } from './ContactListItem.styled';\nimport {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport Button from 'components/Button';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\nimport ModalForm from 'components/ModalForm';\nimport { CloseButton } from 'components/Button/Button.styled';\nimport { getShowModal, showModalChange } from 'redux/modalSlice';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const [updateContact, { isLoading: isUpdaiting }] =\n    useUpdateContactMutation();\n  const showModal = useSelector(getShowModal);\n  const dispatch = useDispatch();\n\n  const handleShowModal = () => {\n    dispatch(showModalChange({ name, number, id }));\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something went wrong. Try again.');\n    }\n  };\n\n  const handleUpdateContact = async fields => {\n    try {\n      console.log('~ fields', fields);\n      await updateContact(fields);\n      dispatch(showModalChange());\n      toast.success('Contact edited successfully!');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Line>\n        {name}: <span>{number}</span>\n      </Line>\n      <ButtonsBlock>\n        <Button click={() => handleShowModal()}>Edit</Button>\n        <Button click={handleDelete} isDeleting={isDeleting}>\n          {isDeleting ? <Loader /> : 'Delete'}\n        </Button>\n      </ButtonsBlock>\n      {showModal && (\n        <Modal onClose={handleShowModal}>\n          <CloseButton onClick={handleShowModal}>\n            <AiOutlineCloseCircle size={20} />\n          </CloseButton>\n          <ModalForm onSubmit={handleUpdateContact} isUpdaiting={isUpdaiting} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","// import PropTypes from 'prop-types';\nimport { List, ListItem } from './ContactList.styled';\nimport ContactListItem from 'components/ContactListItem';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/filterSlice';\n\nconst ContactList = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useSelector(getFilterValue);\n  const createFilter = () => {\n    const normalizedFilterValue = filter.toLocaleLowerCase();\n    if (contacts) {\n      const filteredContacts = contacts.filter(\n        contact =>\n          contact.name.toLocaleLowerCase().includes(normalizedFilterValue) ||\n          contact.number.toString().includes(normalizedFilterValue)\n      );\n      return filteredContacts;\n    }\n  };\n\n  const filteredContacts = createFilter();\n\n  if (filteredContacts) {\n    return (\n      <List>\n        {filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ListItem key={id} name={name}>\n              <ContactListItem name={name} number={number} id={id} />\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n};\n\n// ContactList.propTypes = {\n//   filter: PropTypes.arrayOf(PropTypes.object),\n// };\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 40px;\n  border-radius: 10px;\n  border: none;\n  margin: 20px 0;\n  padding: 10px;\n\n  :focus {\n    outline: 1px solid orange;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterChange, getFilterValue } from 'redux/filterSlice';\n// import PropTypes from 'prop-types';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n  const handleChangeFilter = e => {\n    const inputValue = e.target.value;\n    dispatch(filterChange(inputValue));\n    // setFilter(inputValue);\n  };\n  return (\n    <Input\n      type=\"text\"\n      onChange={handleChangeFilter}\n      value={filter}\n      placeholder=\"Search...\"\n    />\n  );\n};\n\n// Filter.propTypes = {\n//   handleChangeFilter: PropTypes.func.isRequired,\n//   filter: PropTypes.string.isRequired,\n// };\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  margin-top: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst ContactsSection = ({ title, children }) => {\n    return (\n        <>\n            <div>\n                <Title>{title}</Title>\n                {children}\n            </div>\n        </>\n    )\n}\n\nContactsSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default ContactsSection;","import { CenteredLoader, Title } from 'components/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport ContactsSection from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n// import { getShowModal } from 'redux/modalSlice';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const { data: contacts, refetch } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      refetch();\n    }\n  }, [isLoggedIn, refetch]);\n\n  return contacts ? (\n    <>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </div>\n      <ContactsSection title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </ContactsSection>\n    </>\n  ) : (\n    <CenteredLoader>\n      <Loader size={50} />\n    </CenteredLoader>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","Form","Label","Input","Field","ButtonStyled","p","theme","colors","orangered","CloseButton","AddButton","EditButton","NAME_MATCH","requiredError","SignupSchema","object","shape","name","string","required","matches","number","FormError","render","message","Notify","useAddContactMutation","addContact","contactData","data","isPosting","isLoading","contacts","useGetContactsQuery","handleSubmit","e","preventDefault","target","value","contactsNames","find","contact","contactsNumbers","Swal","title","text","icon","confirmButtonText","console","log","toast","reset","initialValues","validationSchema","onSubmit","htmlFor","id","type","pattern","placeholder","Loader","List","ListItem","Line","ButtonsBlock","children","isDeleting","click","onClick","disabled","Overlay","ModalWindow","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","currentTarget","FormBlock","isUpdaiting","useSelector","state","modal","values","actions","autoComplete","useDeleteContactMutation","deleteContact","useUpdateContactMutation","updateContact","showModal","getShowModal","dispatch","useDispatch","handleShowModal","showModalChange","handleDelete","handleUpdateContact","fields","size","filter","getFilterValue","filteredContacts","normalizedFilterValue","toLocaleLowerCase","includes","toString","createFilter","sort","firstName","secondName","localeCompare","map","onChange","inputValue","filterChange","Title","isLoggedIn","authSelectors","refetch"],"sourceRoot":""}